{"ast":null,"code":"var _jsxFileName = \"/home/lain/lain-projects/products_list/src/App.js\";\n//import components\nimport React, { Component } from 'react';\nimport { ProductFactory } from './components/ProductFactory/ProductFactory';\nimport { ProductOrganizer } from './components/ProductOrganizer/ProductOrganizer'; //import data\n\nimport DATA from './data/data.const'; //import CSS\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortHandler = event => this.setState({\n      sort: event.target.dataset.sort\n    });\n\n    this.filterHandler = event => this.setState({\n      nameSearch: event.target.value\n    });\n\n    this.state = {\n      products: DATA,\n      sort: \"default\",\n      nameSearch: \"\"\n    };\n  } //handling function for sort\n\n\n  render() {\n    const {\n      products,\n      sort,\n      nameSearch\n    } = this.state; //to dynamically filters products onChange of SearchBox text\n\n    const filteredProducts = products.filter(product => product.name.toLowerCase().includes(nameSearch.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProductOrganizer, {\n      sortHandler: this.sortHandler,\n      filterHandler: this.filterHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProductFactory, {\n      products: filteredProducts,\n      type: sort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lain/lain-projects/products_list/src/App.js"],"names":["React","Component","ProductFactory","ProductOrganizer","DATA","App","constructor","props","sortHandler","event","setState","sort","target","dataset","filterHandler","nameSearch","value","state","products","render","filteredProducts","filter","product","name","toLowerCase","includes"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,gBAAT,QAAiC,gDAAjC,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAE1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAMlBC,WANkB,GAMJC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACC,MAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqBF;AAA5B,KAAd,CANL;;AAAA,SAOlBG,aAPkB,GAOFL,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEK,MAAAA,UAAU,EAAEN,KAAK,CAACG,MAAN,CAAaI;AAA3B,KAAd,CAPP;;AAEhB,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAEd,IAAX;AAAiBO,MAAAA,IAAI,EAAE,SAAvB;AAAkCI,MAAAA,UAAU,EAAE;AAA9C,KAAb;AACD,GALyB,CAO1B;;;AAIAI,EAAAA,MAAM,GAAE;AACN,UAAM;AAAED,MAAAA,QAAF;AAAYP,MAAAA,IAAZ;AAAkBI,MAAAA;AAAlB,QAAiC,KAAKE,KAA5C,CADM,CAGN;;AACA,UAAMG,gBAAgB,GACpBF,QAAQ,CAACG,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCV,UAAU,CAACS,WAAX,EAApC,CAA3B,CADF;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,WAAW,EAAE,KAAKhB,WAApC;AAAiD,MAAA,aAAa,EAAE,KAAKM,aAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEM,gBAA1B;AAA4C,MAAA,IAAI,EAAET,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAxByB;;AA2B5B,eAAeN,GAAf","sourcesContent":["//import components\nimport React, { Component } from 'react';\nimport { ProductFactory } from './components/ProductFactory/ProductFactory';\nimport { ProductOrganizer } from './components/ProductOrganizer/ProductOrganizer';\n\n//import data\nimport DATA from './data/data.const';\n\n//import CSS\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {products: DATA, sort: \"default\", nameSearch: \"\"};\n  }\n\n  //handling function for sort\n  sortHandler = event => this.setState({sort: event.target.dataset.sort});\n  filterHandler = event => this.setState({ nameSearch: event.target.value });\n\n  render(){\n    const { products, sort, nameSearch } = this.state;\n\n    //to dynamically filters products onChange of SearchBox text\n    const filteredProducts =\n      products.filter(product => product.name.toLowerCase().includes(nameSearch.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <ProductOrganizer sortHandler={this.sortHandler} filterHandler={this.filterHandler} />\n        <ProductFactory products={filteredProducts} type={sort}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}