{"ast":null,"code":"var _jsxFileName = \"/home/lain/lain-projects/products_list/src/components/ProductCard/ProductCard.jsx\";\nimport React from \"react\";\nimport parse from 'html-react-parser'; //component for parsing in HTML from a string\n\nimport \"./ProductCard.css\"; //check if currency is USD\n\nconst checkUSD = currency => currency.toString().toLowerCase() === 'usd' ? true : false; //if currency is USD, append ''$'' to, plus format to 2 decimals in all cases\n\n\nconst getPrice = (price, currency) => checkUSD(currency) === true ? `$${price.toFixed(2).toString()}` : price.toFixed(2).toString();\n\nexport const ProductCard = ({\n  product\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, product.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"by \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, product.vendor.name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, getPrice(product.price, product.currency)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, parse(product.description)));\n};","map":{"version":3,"sources":["/home/lain/lain-projects/products_list/src/components/ProductCard/ProductCard.jsx"],"names":["React","parse","checkUSD","currency","toString","toLowerCase","getPrice","price","toFixed","ProductCard","product","name","vendor","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CAAuC;;AAEvC,OAAO,mBAAP,C,CAEA;;AACA,MAAMC,QAAQ,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,QAAT,GAAoBC,WAApB,OAAsC,KAAtC,GAA8C,IAA9C,GAAqD,KAAlF,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQJ,QAAR,KACfD,QAAQ,CAACC,QAAD,CAAR,KAAuB,IAAvB,GAA+B,IAAGI,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBJ,QAAjB,EAA4B,EAA9D,GAAkEG,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBJ,QAAjB,EADpE;;AAGA,OAAO,MAAMK,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AACxC,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACC,IAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,OAAO,CAACE,MAAR,CAAeD,IAAnB,CAAN,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,QAAQ,CAACI,OAAO,CAACH,KAAT,EAAgBG,OAAO,CAACP,QAAxB,CAAZ,CAHF,eAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,KAAK,CAACS,OAAO,CAACG,WAAT,CAAnC,CAJF,CADF;AAQD,CATM","sourcesContent":["import React from \"react\";\nimport parse from 'html-react-parser'; //component for parsing in HTML from a string\n\nimport \"./ProductCard.css\";\n\n//check if currency is USD\nconst checkUSD = currency => currency.toString().toLowerCase() === 'usd' ? true : false;\n\n//if currency is USD, append ''$'' to, plus format to 2 decimals in all cases\nconst getPrice = (price, currency) =>\n  checkUSD(currency) === true ? `$${price.toFixed(2).toString()}` : price.toFixed(2).toString();\n\nexport const ProductCard = ({product}) => {\n  return (\n    <div className='ProductCard'>\n      <h3>{product.name}</h3>\n      <p>by <b>{product.vendor.name}</b></p>\n      <p>{getPrice(product.price, product.currency)}</p>\n      <div className=\"description\">{parse(product.description)}</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}