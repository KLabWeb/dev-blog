{"ast":null,"code":"const generalCode = new Map([['conditionalImage', {\n  type: 'language-javascript',\n  code: `\nclass GeneralPractice18 extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {image1: 'boxA.gif',\n                  image2: 'boxB.gif',\n                  image3: 'boxC.gif',\n                  hidden: {display: 'none'}};\n  }\n\n  styles = {\n    duoImage: {width: '220px',\n               height: '200px'},\n  }\n\n  imageHandler = (e) => {\n    const {src, id} = e.target;\n\n    const upState = src.includes('boxA.gif') ? {[id]: 'boxB.gif'} : {[id]: 'boxA.gif'};\n    this.setState(upState, this.displayHidden);\n  }\n\n  displayHidden = () => {\n    this.state.image1 === this.state.image2 ? this.setState({hidden: {display: 'inline'}}) : this.setState({hidden: {display: 'none'}});\n  }\n\n  render(){\n    const {type: conImtype, conImcode} = generalCode.get('conditionalImage');\n\n    return (\n        <div>\n            <h2>Conditional Render of Image Based on Same Image State for First Two Images</h2>\n            <img id= 'image1' src={this.state.image1} onClick={this.imageHandler} style={this.styles.duoImage}></img>\n            <img id= 'image2' src={this.state.image2} onClick={this.imageHandler} style={this.styles.duoImage}></img>\n            <img id= 'image3' src={this.state.image3} onClick={this.imageHandler} style={{...this.state.hidden, ...this.styles.duoImage}}></img>\n            <h4>Click on images to switch & Reveal Hidden Image</h4>\n        </div>\n      );\n  }\n}\n                                `\n}], ['listKeys', {\n  type: 'language-javascript',\n  code: `\nlist = () => {\n  const listStyle = {display: 'flex'};\n\n  const people= [{key: '2920', name: 'Tom', age: 27, city: 'Boston'},\n                 {key: '1240', name: 'Mitsuki', age: 33, city: 'Seattle'},\n                 {key: '2310', name: 'Tanya', age: 44, city: 'Chicago'}\n                ];\n  const listItems = people.map(({key, name, age, city}, index) => <li id=\"test\" key={key}>{name} is {age} years old and lives in {city}</li>);\n\n  const test = listItems.map(listItem => <li>Key: {listItem.key}</li>);\n\n  return (<span style={listStyle}>\n            <ul>{listItems}</ul>\n            <ul>{test}</ul>\n          </span>);\n}\n\nrender(){\n  <div>\n    {this.list()}\n  </div>\n}\n`\n}]]);\nexport default generalCode;","map":{"version":3,"sources":["/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-18-react/src/generalCode.js"],"names":["generalCode","Map","type","code"],"mappings":"AAAA,MAAMA,WAAW,GAAG,IAAIC,GAAJ,CAAQ,CAAC,CAAC,kBAAD,EACE;AAACC,EAAAA,IAAI,EAAE,qBAAP;AACCC,EAAAA,IAAI,EACnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAF8B,CADF,CAAD,EA6CI,CAAC,UAAD,EACE;AAACD,EAAAA,IAAI,EAAE,qBAAP;AACCC,EAAAA,IAAI,EACtC;;;;;;;;;;;;;;;;;;;;;;;;AAFiC,CADF,CA7CJ,CAAR,CAApB;AAyEA,eAAeH,WAAf","sourcesContent":["const generalCode = new Map([['conditionalImage',\n                               {type: 'language-javascript',\n                                code:\n`\nclass GeneralPractice18 extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {image1: 'boxA.gif',\n                  image2: 'boxB.gif',\n                  image3: 'boxC.gif',\n                  hidden: {display: 'none'}};\n  }\n\n  styles = {\n    duoImage: {width: '220px',\n               height: '200px'},\n  }\n\n  imageHandler = (e) => {\n    const {src, id} = e.target;\n\n    const upState = src.includes('boxA.gif') ? {[id]: 'boxB.gif'} : {[id]: 'boxA.gif'};\n    this.setState(upState, this.displayHidden);\n  }\n\n  displayHidden = () => {\n    this.state.image1 === this.state.image2 ? this.setState({hidden: {display: 'inline'}}) : this.setState({hidden: {display: 'none'}});\n  }\n\n  render(){\n    const {type: conImtype, conImcode} = generalCode.get('conditionalImage');\n\n    return (\n        <div>\n            <h2>Conditional Render of Image Based on Same Image State for First Two Images</h2>\n            <img id= 'image1' src={this.state.image1} onClick={this.imageHandler} style={this.styles.duoImage}></img>\n            <img id= 'image2' src={this.state.image2} onClick={this.imageHandler} style={this.styles.duoImage}></img>\n            <img id= 'image3' src={this.state.image3} onClick={this.imageHandler} style={{...this.state.hidden, ...this.styles.duoImage}}></img>\n            <h4>Click on images to switch & Reveal Hidden Image</h4>\n        </div>\n      );\n  }\n}\n                                `}],\n                                ['listKeys',\n                                  {type: 'language-javascript',\n                                   code:\n`\nlist = () => {\n  const listStyle = {display: 'flex'};\n\n  const people= [{key: '2920', name: 'Tom', age: 27, city: 'Boston'},\n                 {key: '1240', name: 'Mitsuki', age: 33, city: 'Seattle'},\n                 {key: '2310', name: 'Tanya', age: 44, city: 'Chicago'}\n                ];\n  const listItems = people.map(({key, name, age, city}, index) => <li id=\"test\" key={key}>{name} is {age} years old and lives in {city}</li>);\n\n  const test = listItems.map(listItem => <li>Key: {listItem.key}</li>);\n\n  return (<span style={listStyle}>\n            <ul>{listItems}</ul>\n            <ul>{test}</ul>\n          </span>);\n}\n\nrender(){\n  <div>\n    {this.list()}\n  </div>\n}\n`}]]);\n\nexport default generalCode;\n"]},"metadata":{},"sourceType":"module"}