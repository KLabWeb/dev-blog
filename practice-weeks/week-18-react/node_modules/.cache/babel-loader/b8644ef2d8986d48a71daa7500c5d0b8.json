{"ast":null,"code":"import _objectSpread from \"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-18-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-18-react/src/generalPractice18.jsx\";\nimport React from 'react';\nimport MarkedCode from './components/code-block/markedCode.component';\nimport generalCode from './generalCode.js';\n\nclass GeneralPractice18 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.styles = {\n      duoImage: {\n        width: '220px',\n        height: '200px'\n      }\n    };\n\n    this.imageHandler = e => {\n      const _e$target = e.target,\n            src = _e$target.src,\n            id = _e$target.id;\n      const upState = src.includes('boxA.gif') ? {\n        [id]: 'boxB.gif'\n      } : {\n        [id]: 'boxA.gif'\n      };\n      this.setState(upState, this.displayHidden);\n    };\n\n    this.displayHidden = () => {\n      this.state.image1 === this.state.image2 ? this.setState({\n        hidden: {\n          display: 'inline'\n        }\n      }) : this.setState({\n        hidden: {\n          display: 'none'\n        }\n      });\n    };\n\n    this.list = () => {\n      const people = [{\n        name: 'Tom',\n        age: 27,\n        city: 'Boston'\n      }, {\n        name: 'Mitsuki',\n        age: 33,\n        city: 'Seattle'\n      }, {\n        name: 'Tanya',\n        age: 44,\n        city: 'Chicago'\n      }];\n      const listItems = people.map(({\n        name,\n        age,\n        city\n      }, index) => React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, name, \" is \", age, \" years old and lives in \", city));\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, listItems);\n    };\n\n    this.state = {\n      image1: 'boxA.gif',\n      image2: 'boxB.gif',\n      image3: 'boxC.gif',\n      hidden: {\n        display: 'none'\n      }\n    };\n  }\n\n  render() {\n    const _generalCode$get = generalCode.get('conditionalImage'),\n          conImtype = _generalCode$get.type,\n          conImcode = _generalCode$get.code;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Conditional Render of Image Based on Same Image State for First Two Images\"), React.createElement(\"img\", {\n      id: \"image1\",\n      src: this.state.image1,\n      onClick: this.imageHandler,\n      style: this.styles.duoImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"image2\",\n      src: this.state.image2,\n      onClick: this.imageHandler,\n      style: this.styles.duoImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"image3\",\n      src: this.state.image3,\n      onClick: this.imageHandler,\n      style: _objectSpread({}, this.state.hidden, {}, this.styles.duoImage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Click on images to switch & Reveal Hidden Image\"), React.createElement(MarkedCode, {\n      codeID: \"conditionalImage\",\n      code: conImcode,\n      type: conImtype,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), this.list);\n  }\n\n}\n\nexport default GeneralPractice18;","map":{"version":3,"sources":["/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-18-react/src/generalPractice18.jsx"],"names":["React","MarkedCode","generalCode","GeneralPractice18","Component","constructor","props","styles","duoImage","width","height","imageHandler","e","target","src","id","upState","includes","setState","displayHidden","state","image1","image2","hidden","display","list","people","name","age","city","listItems","map","index","image3","render","get","conImtype","type","conImcode","code"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport MarkedCode from './components/code-block/markedCode.component';\nimport generalCode from './generalCode.js';\n\nclass GeneralPractice18 extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {image1: 'boxA.gif',\n                  image2: 'boxB.gif',\n                  image3: 'boxC.gif',\n                  hidden: {display: 'none'}};\n  }\n\n  styles = {\n    duoImage: {width: '220px',\n               height: '200px'},\n  }\n\n  imageHandler = (e) => {\n    const {src, id} = e.target;\n\n    const upState = src.includes('boxA.gif') ? {[id]: 'boxB.gif'} : {[id]: 'boxA.gif'};\n    this.setState(upState, this.displayHidden);\n  }\n\n  displayHidden = () => {\n    this.state.image1 === this.state.image2 ? this.setState({hidden: {display: 'inline'}}) : this.setState({hidden: {display: 'none'}});\n  }\n\n  list = () => {\n    const people= [{name: 'Tom', age: 27, city: 'Boston'}, {name: 'Mitsuki', age: 33, city: 'Seattle'}, {name: 'Tanya', age: 44, city: 'Chicago'}];\n    const listItems = people.map(({name, age, city}, index) => <li key={index}>{name} is {age} years old and lives in {city}</li>);\n\n    return <ul>{listItems}</ul>;\n  }\n\n  render(){\n    const {type: conImtype, code: conImcode} = generalCode.get('conditionalImage');\n    return (\n        <div>\n          <h2>Conditional Render of Image Based on Same Image State for First Two Images</h2>\n          <img id= 'image1' src={this.state.image1} onClick={this.imageHandler} style={this.styles.duoImage}></img>\n          <img id= 'image2' src={this.state.image2} onClick={this.imageHandler} style={this.styles.duoImage}></img>\n          <img id= 'image3' src={this.state.image3} onClick={this.imageHandler} style={{...this.state.hidden, ...this.styles.duoImage}}></img>\n          <h4>Click on images to switch & Reveal Hidden Image</h4>\n          <MarkedCode codeID='conditionalImage' code={conImcode} type={conImtype} />\n          {this.list}\n      </div>\n      );\n  }\n}\n\nexport default GeneralPractice18;\n"]},"metadata":{},"sourceType":"module"}