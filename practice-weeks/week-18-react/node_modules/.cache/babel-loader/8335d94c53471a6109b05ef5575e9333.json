{"ast":null,"code":"import _objectSpread from \"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-18-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-18-react/src/generalPractice18.jsx\";\nimport React from 'react';\nimport MarkedCode from './components/code-block/markedCode.component';\nimport generalCode from './generalCode.js';\n\nclass GeneralPractice18 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.styles = {\n      duoImage: {\n        width: '220px',\n        height: '200px'\n      },\n      textInput: {\n        width: '300px',\n        height: '200px',\n        marginRight: '5px'\n      }\n    };\n\n    this.imageHandler = e => {\n      const _e$target = e.target,\n            src = _e$target.src,\n            id = _e$target.id;\n      const upState = src.includes('boxA.gif') ? {\n        [id]: 'boxB.gif'\n      } : {\n        [id]: 'boxA.gif'\n      };\n      this.setState(upState, this.displayHidden);\n    };\n\n    this.displayHidden = () => {\n      this.state.image1 === this.state.image2 ? this.setState({\n        hidden: {\n          display: 'inline'\n        }\n      }) : this.setState({\n        hidden: {\n          display: 'none'\n        }\n      });\n    };\n\n    this.list = () => {\n      const listStyle = {\n        display: 'flex'\n      };\n      const people = [{\n        key: '2920',\n        name: 'Tom',\n        age: 27,\n        city: 'Boston'\n      }, {\n        key: '1240',\n        name: 'Mitsuki',\n        age: 33,\n        city: 'Seattle'\n      }, {\n        key: '2310',\n        name: 'Tanya',\n        age: 44,\n        city: 'Chicago'\n      }];\n      const listItems = people.map(({\n        key,\n        name,\n        age,\n        city\n      }, index) => React.createElement(\"li\", {\n        id: \"test\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, name, \" is \", age, \" years old and lives in \", city));\n      const keys = listItems.map(listItem => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Unique Key: \", listItem.key));\n      return React.createElement(\"span\", {\n        style: listStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, listItems), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, keys));\n    };\n\n    this.createBinary = string => {\n      const binaryOut = string.split('').map(char => char.charCodeAt(0).toString(2)).join(' ');\n      this.setState({\n        binary: [binaryOut]\n      });\n    };\n\n    this.textChangeHandle = event => {\n      const name = event.target.name;\n      this.setState({\n        [name]: event.target.value\n      });\n      if (name === 'textarea') this.createBinary(event.target.value);\n    };\n\n    this.checkHandle = event => this.setState(state => ({\n      hideBinary: !state.hideBinary\n    }));\n\n    this.submitHandle = event => {\n      this.textChangeHandle(event);\n      alert('---WARNING: Binary entering red mode: WARNING---');\n      event.preventDefault();\n    };\n\n    this.formSection = () => React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        display: 'flex',\n        flexFlow: 'column nowrap'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      value: this.state.textarea,\n      name: \"textarea\",\n      onChange: this.textChangeHandle,\n      style: this.styles.textInput,\n      placeholder: \"enter text to generate binary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.state.binaryColor == 'red' ? 'red' : this.state.binaryColor,\n      name: \"binaryColor\",\n      onChange: this.textChangeHandle,\n      style: {\n        width: '90px',\n        margin: '5px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Black\"), React.createElement(\"option\", {\n      value: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Red\"), React.createElement(\"option\", {\n      value: \"pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Pink\"), React.createElement(\"option\", {\n      value: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Blue\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Hide binary:\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.hideBinary,\n      name: \"hideBinary\",\n      onChange: this.checkHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Give binary label:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.binaryLabel,\n      name: \"binaryLabel\",\n      onChange: this.textChangeHandle,\n      style: {\n        marginLeft: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.submitHandle,\n      name: \"binaryColor\",\n      value: \"red\",\n      style: {\n        width: '90px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Process\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), this.state.hideBinary === false || this.state.binary[0] != \"\" ? React.createElement(\"div\", {\n      style: {\n        color: this.state.binaryColor,\n        flex: '60%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.binaryLabel), this.state.binary) : '');\n\n    this.state = {\n      image1: 'boxA.gif',\n      image2: 'boxB.gif',\n      image3: 'boxC.gif',\n      hidden: {\n        display: 'none'\n      },\n      binary: '',\n      hideBinary: false\n    };\n  }\n\n  //controlled elements via form end\n  render() {\n    const _generalCode$get = generalCode.get('conditionalImage'),\n          conImgType = _generalCode$get.type,\n          conImgcode = _generalCode$get.code;\n\n    const _generalCode$get2 = generalCode.get('listKeys'),\n          listKeyType = _generalCode$get2.type,\n          listKeyCode = _generalCode$get2.code;\n\n    const _generalCode$get3 = generalCode.get('formCode'),\n          formType = _generalCode$get3.type,\n          formCode = _generalCode$get3.code;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Conditional Render of Image Based on Same Image State for First Two Images\"), React.createElement(\"img\", {\n      id: \"image1\",\n      src: this.state.image1,\n      onClick: this.imageHandler,\n      style: this.styles.duoImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"image2\",\n      src: this.state.image2,\n      onClick: this.imageHandler,\n      style: this.styles.duoImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"image3\",\n      src: this.state.image3,\n      onClick: this.imageHandler,\n      style: _objectSpread({}, this.state.hidden, {}, this.styles.duoImage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Click on images to switch & Reveal Hidden Image\"), React.createElement(MarkedCode, {\n      codeID: \"conditionalImage\",\n      code: conImgcode,\n      type: conImgType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Rendering a List from an Array of Objects w/ Unique Keys\"), this.list(), React.createElement(MarkedCode, {\n      codeId: \"listKeys\",\n      code: listKeyCode,\n      type: listKeyType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Form Handling with Controlled Components\"), this.formSection(), React.createElement(MarkedCode, {\n      codeID: \"formCode\",\n      code: formCode,\n      type: formType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default GeneralPractice18;","map":{"version":3,"sources":["/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-18-react/src/generalPractice18.jsx"],"names":["React","MarkedCode","generalCode","GeneralPractice18","Component","constructor","props","styles","duoImage","width","height","textInput","marginRight","imageHandler","e","target","src","id","upState","includes","setState","displayHidden","state","image1","image2","hidden","display","list","listStyle","people","key","name","age","city","listItems","map","index","keys","listItem","createBinary","string","binaryOut","split","char","charCodeAt","toString","join","binary","textChangeHandle","event","value","checkHandle","hideBinary","submitHandle","alert","preventDefault","formSection","flexFlow","textarea","binaryColor","margin","binaryLabel","marginLeft","color","flex","image3","render","get","conImgType","type","conImgcode","code","listKeyType","listKeyCode","formType","formCode"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport MarkedCode from './components/code-block/markedCode.component';\nimport generalCode from './generalCode.js';\n\nclass GeneralPractice18 extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {image1: 'boxA.gif',\n                  image2: 'boxB.gif',\n                  image3: 'boxC.gif',\n                  hidden: {display: 'none'},\n                  binary: '',\n                  hideBinary: false};\n  }\n\n  styles = {\n    duoImage: {width: '220px',\n               height: '200px'},\n    textInput: {width: '300px',\n                height: '200px',\n                marginRight: '5px'}\n\n  }\n\n  //conditional image rendering code start\n  imageHandler = (e) => {\n    const {src, id} = e.target;\n\n    const upState = src.includes('boxA.gif') ? {[id]: 'boxB.gif'} : {[id]: 'boxA.gif'};\n    this.setState(upState, this.displayHidden);\n  }\n\n  displayHidden = () => {\n    this.state.image1 === this.state.image2 ? this.setState({hidden: {display: 'inline'}}) : this.setState({hidden: {display: 'none'}});\n  }\n  //conditional image rendering code end\n\n  //rendering multiple elements through list with unique keys start\n  list = () => {\n    const listStyle = {display: 'flex'};\n\n    const people= [{key: '2920', name: 'Tom', age: 27, city: 'Boston'},\n                   {key: '1240', name: 'Mitsuki', age: 33, city: 'Seattle'},\n                   {key: '2310', name: 'Tanya', age: 44, city: 'Chicago'}\n                  ];\n    const listItems = people.map(({key, name, age, city}, index) => <li id=\"test\" key={key}>{name} is {age} years old and lives in {city}</li>);\n\n    const keys = listItems.map(listItem => <li>Unique Key: {listItem.key}</li>);\n\n    return (<span style={listStyle}>\n              <ul>{listItems}</ul>\n              <ul>{keys}</ul>\n            </span>);\n  }\n  //rendering multiple elements through list with unique keys end\n\n  //controlled elements via form start\n  createBinary = string => {\n    const binaryOut = string.split('').map(char => char.charCodeAt(0).toString(2)).join(' ');\n    this.setState({binary: [binaryOut]});\n  }\n\n  textChangeHandle = event => {\n    const name = event.target.name;\n    this.setState({[name]: event.target.value});\n\n    if(name === 'textarea')\n      this.createBinary(event.target.value);\n  }\n\n  checkHandle = event =>\n    this.setState(state => ({hideBinary: !state.hideBinary}));\n\n  submitHandle = event => {\n    this.textChangeHandle(event);\n    alert('---WARNING: Binary entering red mode: WARNING---');\n    event.preventDefault();\n  }\n\n  formSection = () =>\n   (<div style={{display: 'flex'}}>\n       <form style={{display: 'flex', flexFlow: 'column nowrap'}}>\n        <textarea type='text' value={this.state.textarea} name='textarea' onChange={this.textChangeHandle} style={this.styles.textInput} placeholder='enter text to generate binary'/>\n        <select value={this.state.binaryColor == 'red' ? 'red' : this.state.binaryColor} name='binaryColor' onChange={this.textChangeHandle} style={{width: '90px', margin: '5px 0'}}>\n          <option value='black'>Black</option>\n          <option value='red'>Red</option>\n          <option value='pink'>Pink</option>\n          <option value='blue'>Blue</option>\n        </select>\n        <label>\n          Hide binary:\n          <input type='checkbox' checked={this.state.hideBinary} name='hideBinary' onChange={this.checkHandle} />\n        </label>\n        <label>\n          Give binary label:\n          <input type='text' value={this.state.binaryLabel} name='binaryLabel' onChange={this.textChangeHandle} style={{marginLeft: '5px'}}/>\n        </label>\n        <button type='submit' onClick={this.submitHandle} name='binaryColor' value='red' style={{width: '90px'}}>Process</button>\n\n       </form>\n\n       <br />\n       {this.state.hideBinary === false || this.state.binary[0] != \"\" ?\n         <div style={{color: this.state.binaryColor, flex: '60%'}}>\n           <h5>{this.state.binaryLabel}</h5>\n             {this.state.binary}\n         </div> : ''}\n    </div>)\n\n  //controlled elements via form end\n\n  render(){\n\n    const {type: conImgType, code: conImgcode} = generalCode.get('conditionalImage');\n    const {type: listKeyType, code: listKeyCode} = generalCode.get('listKeys');\n    const {type: formType, code: formCode} = generalCode.get('formCode');\n\n    return (\n        <div>\n          <h2>Conditional Render of Image Based on Same Image State for First Two Images</h2>\n          <img id= 'image1' src={this.state.image1} onClick={this.imageHandler} style={this.styles.duoImage}></img>\n          <img id= 'image2' src={this.state.image2} onClick={this.imageHandler} style={this.styles.duoImage}></img>\n          <img id= 'image3' src={this.state.image3} onClick={this.imageHandler} style={{...this.state.hidden, ...this.styles.duoImage}}></img>\n          <h4>Click on images to switch & Reveal Hidden Image</h4>\n          <MarkedCode codeID='conditionalImage' code={conImgcode} type={conImgType} />\n          <h2>Rendering a List from an Array of Objects w/ Unique Keys</h2>\n          {this.list()}\n          <MarkedCode codeId='listKeys' code={listKeyCode} type={listKeyType} />\n          <h2>Form Handling with Controlled Components</h2>\n          {this.formSection()}\n          <MarkedCode codeID='formCode' code={formCode} type={formType} />\n      </div>\n      );\n  }\n}\n\nexport default GeneralPractice18;\n"]},"metadata":{},"sourceType":"module"}