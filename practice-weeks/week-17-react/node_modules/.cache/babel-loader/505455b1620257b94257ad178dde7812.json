{"ast":null,"code":"import _classCallCheck from\"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-17-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-17-react/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-17-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-17-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-17-react/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Prism from\"prismjs\";import MarkedCode from'./markedCode.component';import'../prism.css';var CodeGenerator=/*#__PURE__*/function(_React$Component){_inherits(CodeGenerator,_React$Component);function CodeGenerator(props){var _this;_classCallCheck(this,CodeGenerator);_this=_possibleConstructorReturn(this,_getPrototypeOf(CodeGenerator).call(this,props));_this.state={codeBlocks:new Map([['conditional17',{type:'language-javascript',code:\"import React from 'react';\\n\\nclass ConditionalRender extends React.Component{\\n  constructor(){\\n    super();\\n\\n    this.state = { loggedIn: false };\\n\\n    this.styles = {buttonContainer:{\\n                      margin: '0 auto',\\n                      width: '500px',\\n                      background: '#e05915',\\n                      padding: '5px 10px',\\n                      textAlign: 'center'\\n                    }}\\n  }\\n\\n  logout() { this.setState({loggedIn: false}) };\\n  login() { this.setState({loggedIn: true}) };\\n\\n  render(){\\n    let button;\\n    \\n    if(this.state.loggedIn){\\n      button = <button onClick={() => this.logout()}>Log Out</button>;}\\n    else{\\n      button = <button onClick={() => this.login()}>Log In</button>;}\\n\\n    return (\\n      <div className=\\\"buttonContainer\\\" style={this.styles.buttonContainer}>\\n        <h2>Login/out Button Component</h2>\\n        <p>Conditionally renders either LoginButton or LogoutButton depending on its current state.</p>\\n        {button}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ConditionalRender;\"}]])};return _this;}_createClass(CodeGenerator,[{key:\"render\",value:function render(){var codeId=this.props.codeId;var _this$state$codeBlock=this.state.codeBlocks.get(codeId),type=_this$state$codeBlock.type,code=_this$state$codeBlock.code;return React.createElement(MarkedCode,{codeID:codeId,code:code,type:type});}}]);return CodeGenerator;}(React.Component);export default CodeGenerator;","map":{"version":3,"sources":["/Users/miskellk/Desktop/lain-projects/dev-blog/practice-weeks/week-17-react/src/components/codeGenerator.component.jsx"],"names":["React","Prism","MarkedCode","CodeGenerator","props","state","codeBlocks","Map","type","code","codeId","get","Component"],"mappings":"oyBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CAEA,MAAO,cAAP,C,GAEMC,CAAAA,a,mFACJ,uBAAYC,KAAZ,CAAkB,+CAChB,+EAAMA,KAAN,GAEA,MAAKC,KAAL,CAAa,CACXC,UAAU,CAAE,GAAIC,CAAAA,GAAJ,CAAQ,CAAC,CAAC,eAAD,CACP,CAACC,IAAI,CAAE,qBAAP,CACAC,IAAI,ikCADJ,CADO,CAAD,CAAR,CADD,CAAb,CAHgB,aAgDjB,C,iEAEO,IACCC,CAAAA,MADD,CACW,KAAKN,KADhB,CACCM,MADD,2BAEe,KAAKL,KAAL,CAAWC,UAAX,CAAsBK,GAAtB,CAA0BD,MAA1B,CAFf,CAECF,IAFD,uBAECA,IAFD,CAEOC,IAFP,uBAEOA,IAFP,CAIN,MAAO,qBAAC,UAAD,EAAY,MAAM,CAAEC,MAApB,CAA4B,IAAI,CAAED,IAAlC,CAAwC,IAAI,CAAED,IAA9C,EAAP,CACD,C,2BAxDyBR,KAAK,CAACY,S,EA2DlC,cAAeT,CAAAA,aAAf","sourcesContent":["import React from 'react';\n\nimport Prism from \"prismjs\";\nimport MarkedCode from './markedCode.component';\n\nimport '../prism.css'\n\nclass CodeGenerator extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      codeBlocks: new Map([['conditional17',\n                    {type: 'language-javascript',\n                    code:\n`import React from 'react';\n\nclass ConditionalRender extends React.Component{\n  constructor(){\n    super();\n\n    this.state = { loggedIn: false };\n\n    this.styles = {buttonContainer:{\n                      margin: '0 auto',\n                      width: '500px',\n                      background: '#e05915',\n                      padding: '5px 10px',\n                      textAlign: 'center'\n                    }}\n  }\n\n  logout() { this.setState({loggedIn: false}) };\n  login() { this.setState({loggedIn: true}) };\n\n  render(){\n    let button;\n    \n    if(this.state.loggedIn){\n      button = <button onClick={() => this.logout()}>Log Out</button>;}\n    else{\n      button = <button onClick={() => this.login()}>Log In</button>;}\n\n    return (\n      <div className=\"buttonContainer\" style={this.styles.buttonContainer}>\n        <h2>Login/out Button Component</h2>\n        <p>Conditionally renders either LoginButton or LogoutButton depending on its current state.</p>\n        {button}\n      </div>\n    );\n  }\n}\n\nexport default ConditionalRender;`}]\n                    ])\n        }\n  }\n\n  render(){\n    const {codeId} = this.props;\n    const {type, code} = this.state.codeBlocks.get(codeId);\n\n    return <MarkedCode codeID={codeId} code={code} type={type} />;\n  }\n}\n\nexport default CodeGenerator;\n"]},"metadata":{},"sourceType":"module"}